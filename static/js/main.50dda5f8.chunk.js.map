{"version":3,"sources":["CurRateAPI/CurRateAPI.js","Converter/Converter.js","ListItem/ListItem.js","pages/NotFoundPage.js","Rates/Rates.js","pages/RatesPage.js","App/App.js","reportWebVitals.js","index.js"],"names":["CurRateAPI","this","USDquerySting","currency","a","alert","result","axios","get","getRequestString","then","data","status","quotes","selectedCurrency","USDRUB","Converter","props","cur","state","USDref","React","createRef","RUBref","getResult","bind","e","value","target","name","current","length","toFixed","className","class","ref","onChange","type","placeholder","to","Component","ListItem","style","NotFoundPage","Rates","currencyArr","handlerSelectedCurrency","map","item","index","RatesPage","setState","getSelectedCurrency","console","log","Object","entries","getCurrencyArr","App","getUSDRUBcurrency","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50dda5f8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default class CurRateAPI {\n    constructor() {\n        this.USDquerySting = 'http://apilayer.net/api/live?access_key=7ef3a3b4cf0bb3cb761bfdcc278247b1&currencies=RUB&source=USD&format=1';\n    }\n\n    async getSelectedCurrency(currency) {\n        if (currency !== 'USD') {\n            currency = 'USD'\n            alert('Увы API бесплатно дает только курс по доллару')\n        }\n        let result = '';\n        await axios.get(this.getRequestString(currency))\n            .then(data => {\n                if (data.status === 200) {\n                    result = data.data.quotes;\n                }\n            })\n        return result;\n    }\n\n    getRequestString(selectedCurrency) {\n        return `http://apilayer.net/api/live?access_key=7ef3a3b4cf0bb3cb761bfdcc278247b1&currencies=EUR,GBP,CAD,PLN,RUB&source=${selectedCurrency}&format=1`\n    }\n\n    async getUSDRUBcurrency() {\n        let currency = '';\n        await axios.get(this.USDquerySting)\n            .then(data => {\n                if (data.status === 200) {\n                    // console.log(data.data.quotes.USDRUB);\n                    currency = data.data.quotes.USDRUB;\n                }\n            });\n        return currency;\n    }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Converter extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.currency = this.props.cur;\n        this.state = {\n            result: '',\n        }\n\n        this.USDref = React.createRef();\n        this.RUBref = React.createRef();\n\n        this.getResult = this.getResult.bind(this);\n    }\n\n    getResult(e) {\n        let value = e.target.value;\n        const name = e.target.name;\n\n        const USDref = this.USDref.current;\n        const RUBref = this.RUBref.current;\n\n        if (value.length === 0) {\n            USDref.value = 'Empty';\n            RUBref.value = 'Empty';\n            return;\n        };\n\n        if (value < 0) {\n            USDref.value = 'Empty';\n            RUBref.value = 'Empty';\n            return;\n        }\n\n        if (name === 'usd') {\n            RUBref.value = (this.currency * value).toFixed(1);\n            return;\n        }\n        if (name === 'rub') {\n            USDref.value = (value / this.currency).toFixed(1);\n            return;\n        }\n    }\n\n    render() {\n        return (\n            <div className='container custom-container'>\n                <div className='logo'>Конвертировать доллары в рубли</div>\n                <p className='current-rate'>Текущий курс рубля к доллару {(+this.props.cur).toFixed(1)}</p>\n                <div className='input-container'>\n                    <label>\n                        <i class=\"fas fa-dollar-sign\"></i>\n                        <input ref={this.USDref} onChange={this.getResult} name='usd' type=\"number\"\n                            placeholder='USD' />\n                    </label>\n                    <i className=\"fas fa-exchange-alt\" />\n                    <label>\n                        <i class=\"fas fa-ruble-sign\"></i>\n                        <input ref={this.RUBref} onChange={this.getResult} name=\"rub\" type='number'\n                            placeholder='RUB' />\n                    </label>\n                </div>\n                <div className='rates-page-link'><Link to='/RatesPAge'>Курсы валют</Link></div>\n            </div>\n        )\n    }\n}","export default function ListItem(props) {\n    return (\n        <li style={{\n            }}>\n                <p>{props.name} :</p>\n                <p>{props.value.toFixed(1)}</p>\n        </li>\n    )\n}","import {Link} from \"react-router-dom\";\n\nexport default function NotFoundPage() {\n    return (\n        <div className='err404'>\n            <h1><strong>404</strong></h1>\n            <h3>Page Not Found</h3>\n            <div className=\"rates-page-link\"><Link to='/'>На главную</Link></div>\n        </div>\n    )\n}","import React from \"react\";\nimport ListItem from \"../ListItem/ListItem\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Rates(props) {\n    const {currencyArr} = props;\n    return (\n        <div className='rate'>\n            <div className='logo'>Текущие курсы валют!</div>\n            <select onChange={props.handlerSelectedCurrency}>\n                <option value='USD'>USD</option>\n                <option value='EUR'>EUR</option>\n                <option value='RUB'>RUB</option>\n            </select>\n            <ul>\n                {\n                    currencyArr.map((item, index) => {\n                        return <ListItem key={index} name={item[0]} value={item[1]}/>\n                    })\n                }\n            </ul>\n            <div className=\"rates-page-link\"><Link to='/'>Назад</Link></div>\n        </div>\n    )\n}","import React from \"react\";\nimport CurRateAPI from \"../CurRateAPI/CurRateAPI\";\nimport ListItem from \"../ListItem/ListItem\";\nimport {Route, Routes} from \"react-router-dom\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport Rates from \"../Rates/Rates\";\n\nexport default class RatesPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedCurrency: '',       //выбранная валюта в списке\n            currency: '',\n        };\n        this.currencyArr = '';\n        this.handlerSelectedCurrency = this.handlerSelectedCurrency.bind(this);\n    }\n\n    async componentDidMount() {\n        await this.setState({\n            selectedCurrency: 'USD'\n        })\n\n        const currency = await this.selectedCurrency(this.state.selectedCurrency);\n        this.setState({\n            currency,\n        })\n    }\n\n    async selectedCurrency(selectedCurrency) {\n        const cur = new CurRateAPI();\n        return await cur.getSelectedCurrency(selectedCurrency);\n    }\n\n    async handlerSelectedCurrency(e) {\n        const selectedCurrency = e.target.value;\n        const currency = await this.selectedCurrency(selectedCurrency);\n        await this.setState({\n            selectedCurrency,\n            currency\n        })\n        console.log('currency')\n    }\n\n    getCurrencyArr() {\n        this.currencyArr = Object.entries(this.state.currency);\n    }\n\n\n    render() {\n\n        this.getCurrencyArr()\n        console.log('this.currencyArr', this.currencyArr);\n        return (\n            <Rates\n                handlerSelectedCurrency={this.handlerSelectedCurrency}\n                currencyArr={this.currencyArr}\n            />\n        )\n    }\n}","import React from \"react\";\nimport CurRateAPI from \"../CurRateAPI/CurRateAPI\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Routes,\n} from 'react-router-dom';\nimport Converter from \"../Converter/Converter\";\nimport Rates from '../pages/RatesPage';\nimport NotFoundPage from '../pages/NotFoundPage'\n\n//https://currencylayer.com/\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            USDRUB: '',\n        }\n    }\n\n    async componentDidMount() {\n        const cur = new CurRateAPI();\n        this.setState({\n            USDRUB: await cur.getUSDRUBcurrency(),\n        })\n    }\n\n    // validation(number) {\n    //\n    //     if (number.length > 15) {\n    //         alert('Не более 15 цифр');\n    //         return number.substring(0, 15);\n    //     }\n    //\n    //     if (number === '') {\n    //         return '';\n    //     }\n    //\n    //     if (parseFloat(number) || parseInt(number)) {\n    //         if (number.match('[A-Za-z]+$') !== null) {\n    //             const index = number.match('[A-Za-z]+$')['index'];\n    //             alert('В числах есть буквы ?')\n    //             return number.substring(0, index);\n    //             // не работает с русским алфавитом\n    //         }\n    //         return number;\n    //     } else {\n    //         alert('Введите корректное значение');\n    //         return '';\n    //     }\n    // }\n\n    render() {\n        const {USDRUB: cur,} = this.state;\n        \n        return (\n            <div>\n                <Routes>\n                    <Route path='/' element={\n                        <Converter\n                            cur={cur}\n                        />\n                    }/>\n                    <Route path='/RatesPage' element={<Rates/>}>Далее</Route>\n                    <Route path='*' element={<NotFoundPage/>}/>\n                </Routes>\n            </div>\n        )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\nreportWebVitals();\n\n"],"sourceRoot":""}